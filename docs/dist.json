{
  "openapi": "3.0.1",
  "info": {
    "title": "Ejoin Gateway HTTP API",
    "description": "Welcome to Ejoin Gateway HTTP API documentation. Here you will find details\nto learn about, try, and implement Ejoin Gateway HTTP API.\n\nThe Ejoin Gateway HTTP APIv2.4.0 is available in SMSEagle software version\n5.0 and higher.\n\n# SDKs\nSMSEagle API is built on OpenAPI 3.0 Specification. You may download the API specification using **Download** button at the top of the page. The specification file can be used to generate SDK in your preffered programming language using open source tools like [OpenAPI Generator](https://openapi-generator.tech/) or  [Swagger Codegen](https://swagger.io/tools/swagger-codegen/).\n\n# Examples\nFor each API endpoint, we provide basic use case examples. Each example has sample payload parameters in JSON format showing how to complete a task (for example send SMS, create Phonebook contact, Get modem signal strength, etc.). Each example is accompanied with API response sample.\n\n# Webhooks\nIf you want to be notified about certain events like incoming message or change of delivery status, use webhooks. Webhooks are standard HTTP endpoints implemented in your application that will accept HTTP requests from SMSEagle device. Webhooks save you from having to continuously send requests to the SMSEagle device asking for message status. Webhooks can be configured via feature named **Callback URL** (Web-GUI > menu CallbackURL).\n",
    "version": "2.4.1",
    "x-logo": {
      "url": "./logotyp-ejoin.png",
      "backgroundColor": "#FAFAFA",
      "altText": "Logo"
    }
  },
  "tags": [
    {
      "name": "SMS Sending"
    },
    {
      "name": "ESIM"
    }
  ],
  "paths": {
    "/goip_post_sms.html": {
      "post": {
        "summary": "SMS Sending",
        "deprecated": false,
        "description": "Tips:\n1. While not choose a port, device will pick up a random port to send SMS to every recipient.\n2. While chose more than one ports, and just one SMS recipient , then device will use all chose port to\nsend SMS to this recipient.\n3. If more ports, and more recipient designed, then every port will send SMS to every recipient\nseparately.",
        "tags": [
          "SMS Sending"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "description": "API version",
            "required": false,
            "example": "1.01",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "Device username",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Device password",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Message type"
                  },
                  "sr_url": {
                    "type": "string",
                    "description": "Status report forward url"
                  },
                  "sr_cnt": {
                    "type": "string",
                    "description": "Max num of SMS\nresult can keep in\ncache."
                  },
                  "sr_prd": {
                    "type": "integer",
                    "description": "The max time SMS\nresult can keep in\ncache"
                  },
                  "sms_url": {
                    "type": "string",
                    "description": "SMS forward URL"
                  },
                  "sms_cnt": {
                    "type": "string",
                    "description": "Max num of SMS can\nkeep in cache"
                  },
                  "sms_prd": {
                    "type": "integer",
                    "description": "Max time SMS can"
                  },
                  "task_num": {
                    "type": "string",
                    "description": "Total task"
                  },
                  "tasks": {
                    "type": "object",
                    "properties": {
                      "tid": {
                        "type": "integer",
                        "description": "Task ID"
                      },
                      "from": {
                        "type": "string",
                        "description": "Use‘,’‘-’to assign more than one port(from\nchannel 1)"
                      },
                      "to": {
                        "type": "string",
                        "description": "one or more(use ‘,’to distinguish) recipients"
                      },
                      "to_all": {
                        "type": "string",
                        "description": "1 represents all ports",
                        "default": "1"
                      },
                      "sms": {
                        "type": "string",
                        "description": "SMS content"
                      },
                      "chs": {
                        "type": "string",
                        "description": "Character coding set (utf8|base64)"
                      },
                      "codeing": {
                        "type": "integer",
                        "description": "pecific the SMS codec",
                        "default": 0,
                        "enum": [
                          0,
                          1,
                          2
                        ]
                      },
                      "smstype": {
                        "type": "integer",
                        "default": 0,
                        "enum": [
                          0,
                          1,
                          2
                        ]
                      },
                      "smstitle": {
                        "type": "string",
                        "description": "MMS subject：MMS subject format is UTF-8，this parameter could be empty;"
                      },
                      "to_title_arr ay": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "[\"number\", \"title\"]"
                        }
                      }
                    },
                    "required": [
                      "tid",
                      "from",
                      "to",
                      "to_all",
                      "sms",
                      "chs",
                      "codeing",
                      "smstype",
                      "smstitle"
                    ]
                  }
                },
                "required": [
                  "type",
                  "task_num",
                  "tasks"
                ]
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "send-sms"
                    },
                    "task_num": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tid": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "tid"
                        ]
                      }
                    }
                  },
                  "required": [
                    "type",
                    "task_num"
                  ]
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "type": "send-sms",
                      "task_num": 1,
                      "tasks": [
                        {
                          "tid": "tid_1"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "recipients": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "recipients"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "1": {
                    "summary": "异常示例",
                    "value": {
                      "message": {
                        "recipients": "One of parameters: to, contacts, groups is required."
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Invalid API key."
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "1": {
                    "summary": "异常示例",
                    "value": {
                      "message": "Invalid API key."
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [],
        "x-codeSamples": []
      }
    },
    "/goip_get_esims.html": {
      "get": {
        "summary": "Query ESIM",
        "deprecated": false,
        "description": "",
        "tags": [
          "ESIM"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "description": "API version  \n1.0: Compatible with\nprevious API\n1.1: Support for the description of this document",
            "required": false,
            "example": "1.0",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "Device Username",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Device password",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ports",
            "in": "query",
            "description": "The specified port number (valued\nfrom 1). The values are as follows: (4) all: all ports;\n(5) 2: Specify a single port;\n(6) 1-2, 4: Port numbers separated by\nshort numbers, specifying multiple ports, where \"-\" indicates a continuous port number;",
            "required": false,
            "example": "all",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "ports": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "port": {
                            "type": "integer"
                          },
                          "eid": {
                            "type": "string"
                          },
                          "esim_state": {
                            "type": "string"
                          },
                          "profiles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "slot": {
                                  "type": "integer"
                                },
                                "enabled": {
                                  "type": "integer"
                                },
                                "iccid": {
                                  "type": "string"
                                },
                                "ac": {
                                  "type": "string"
                                },
                                "cc": {
                                  "type": "string"
                                },
                                "provider": {
                                  "type": "string"
                                },
                                "exust": {
                                  "type": "integer"
                                },
                                "op": {
                                  "type": "integer"
                                },
                                "status": {
                                  "type": "integer",
                                  "description": "The current esim profile operation status, with\nthe following values The values are as follows: 0 - No operation\n1 - Operation request submitted\n2 - Profile operation is in progress on the\ncurrent port\n3 - Operation error, the specific reason is described in the reason field",
                                  "enum": [
                                    0,
                                    1,
                                    2,
                                    3
                                  ]
                                },
                                "reason": {
                                  "type": "string",
                                  "description": "Causes of operational errors"
                                }
                              },
                              "required": [
                                "slot",
                                "enabled",
                                "iccid",
                                "ac",
                                "cc",
                                "provider",
                                "exust",
                                "op",
                                "status",
                                "reason"
                              ]
                            }
                          }
                        },
                        "required": [
                          "port",
                          "eid",
                          "esim_state",
                          "profiles"
                        ]
                      }
                    }
                  },
                  "required": [
                    "code",
                    "reason",
                    "count",
                    "ports"
                  ]
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 200,
                      "reason": "OK",
                      "count": 1,
                      "ports": [
                        {
                          "port": 5
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "tasks": {
        "type": "object",
        "properties": {
          "tid": {
            "type": "integer",
            "description": "Task ID"
          },
          "from": {
            "type": "string",
            "description": "Use‘,’‘-’to assign more than one port(from\nchannel 1)"
          },
          "to": {
            "type": "string"
          },
          "to_all": {
            "type": "string"
          },
          "sms": {
            "type": "string"
          },
          "chs": {
            "type": "string"
          }
        },
        "required": [
          "from",
          "to",
          "to_all",
          "sms",
          "chs"
        ]
      },
      "Pet": {
        "required": [
          "name",
          "photoUrls",
          "id",
          "category",
          "tags",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "宠物ID编号"
          },
          "category": {
            "$ref": "#/components/schemas/Category",
            "description": "分组"
          },
          "name": {
            "type": "string",
            "description": "名称",
            "examples": [
              "doggie"
            ]
          },
          "photoUrls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "照片URL"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "description": "标签"
          },
          "status": {
            "type": "string",
            "description": "宠物销售状态",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "分组ID编号"
          },
          "name": {
            "type": "string",
            "description": "分组名称"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "标签ID编号"
          },
          "name": {
            "type": "string",
            "description": "标签名称"
          }
        },
        "xml": {
          "name": "Tag"
        }
      }
    },
    "securitySchemes": {}
  },
  "servers": [],
  "security": {}
}
